plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlinx-serialization'

    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdkVersion androidBuild.compileSdkVersion
    buildToolsVersion androidBuild.buildToolsVersion

    defaultConfig {
        applicationId "net.imknown.android.bundletooldevicespecjsongenerator"

        versionCode androidBuild.versionCode
        versionName androidBuild.versionName

        archivesBaseName = "btdsjg-$versionName-$versionCode-$currentDate-$currentGitBranchName"

        minSdkVersion androidBuild.minSdkVersion
        targetSdkVersion androidBuild.targetSdkVersion

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        resConfigs 'zh-rCN', 'ja-rJP'

        buildConfigField 'String', 'GIT_BRANCH', "\"$currentGitBranchName\""
    }

    signingConfigs {
        release {
            storeFile file(keysConfig.release.storeFile)
            storePassword keysConfig.release.storePassword
            keyAlias keysConfig.release.keyAlias
            keyPassword keysConfig.release.keyPassword
        }

        debug {
            storeFile file(keysConfig.debug.storeFile)
            storePassword keysConfig.debug.storePassword
            keyAlias keysConfig.debug.keyAlias
            keyPassword keysConfig.debug.keyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true

            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro',
                    'proguard-rules-kotlinx-serialization-json.pro',
                    'proguard-firebase-rules.pro'
        }

        debug {
            debuggable true
            jniDebuggable true

            signingConfig signingConfigs.debug

            applicationIdSuffix ".$name"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

import java.time.Instant
import java.time.ZoneId
import java.time.format.DateTimeFormatter

private static getCurrentDate() {
    DateTimeFormatter.ofPattern("yyyyMMdd-HHmm").format(Instant.now().atZone(ZoneId.systemDefault()))
}

private static getCurrentGitBranchName() {
    def branch = ""
    def process = "git rev-parse --abbrev-ref HEAD".execute()
    process.in.eachLine { line -> branch = line }
    process.err.eachLine { line -> println line }
    process.waitFor()

    branch
}

apply from: 'dependencies.gradle'